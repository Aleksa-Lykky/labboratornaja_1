import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;

// TIP: To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class Students {
    public static void main(String[] args) {
        Student Z = new Student("Заречная", 518, 5, new int[]{3, 4, 3, 5, 3});
        Student B = new Student("Березин", 405, 4, new int[]{5, 4, 5, 5, 4});
        Student N = new Student("Никодимова", 401, 4, new int[]{2, 3, 4, 4, 3});
        Student S = new Student("Свердлов", 511, 5, new int[]{2, 2, 2, 2, 3});
        Student M = new Student("Мирошниченко", 505, 5, new int[]{5, 3, 3, 2, 3});
        Student P = new Student("Пискарев", 513, 5, new int[]{2, 3, 3, 2, 3});
        Student A = new Student("Адмиралова", 407, 4, new int[]{4, 5, 5, 5, 3});

        ArrayList<Student> students = new ArrayList<>(Arrays.asList(Z, B, N, S, M, P, A));

        System.out.println("Студенты со средним баллом >= 3:");
        for (Student student : students) {
            if (checkGrades(student.getGrade())) {
                student.println();
            }
        }

        System.out.println("\nСтуденты 4-го курса:");
        printStudents(students, 4);

        System.out.println("\nСтуденты 5-го курса:");
        printStudents(students, 5);

        System.out.println("\nПеред удалением:");
        print(students);

        deleteStudents(students);

        System.out.println("\nПосле удаления:");
        print(students);
    }

    public static class Student {
        private String name;
        private int studyGroup;
        private int yearOfStudy;
        private int[] grade;

        public Student(String name, int studyGroup, int yearOfStudy, int[] grade) {
            this.name = name;
            this.studyGroup = studyGroup;
            this.yearOfStudy = yearOfStudy;
            this.grade = grade;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public int getStudyGroup() {
            return studyGroup;
        }

        public void setStudyGroup(int studyGroup) {
            this.studyGroup = studyGroup;
        }

        public int getYearOfStudy() {
            return yearOfStudy;
        }

        public void setYearOfStudy(int yearOfStudy) {
            this.yearOfStudy = yearOfStudy;
        }

        public int[] getGrade() {
            return grade;
        }

        public void setGrade(int[] grade) {
            this.grade = grade;
        }

        public void println() {
            System.out.println(name + ", " + studyGroup + ", " + yearOfStudy + ", " + Arrays.toString(grade));
        }
    }

    public static boolean checkGrades(int[] grade) {
        float averageMark = ((float) Arrays.stream(grade).sum()) / grade.length;
        return averageMark >= 3;
    }

    public static void deleteStudents(ArrayList<Student> students) {
        Iterator<Student> iterator = students.iterator();
        while (iterator.hasNext()) {
            Student student = iterator.next();
            if (!checkGrades(student.getGrade())) {
                iterator.remove();
            } else {
                student.setYearOfStudy(student.getYearOfStudy() + 1);
            }
        }
    }

    public static void printStudents(ArrayList<Student> students, int yearOfStudy) {
        for (Student student : students) {
            if (student.getYearOfStudy() == yearOfStudy) {
                System.out.println(student.getName());
            }
        }
    }

    public static void print(ArrayList<Student> students) {
        for (Student student : students) {
            System.out.print(student.getName() + " (" + student.getYearOfStudy() + " курс), ");
        }
        System.out.println();
    }
}

